[
    {
        "filename": "ClearFirefoxCache.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Clear Firefox Cache",
        "description": "This script will clean up Mozilla Firefox for all users.",
        "shell": "powershell"
    },
    {
        "filename": "ClearGoogleChromeCache.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Clear Google Chrome Cache",
        "description": "This script will clean up Google Chrome for all users.",
        "shell": "powershell"
    },
    {
        "filename": "InstallAdobeReader.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Install Adobe Reader DC",
        "description": "Installs Adobe Reader DC.",
        "shell": "powershell"
    },
    {
        "filename": "InstallDuplicati.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Install Duplicati",
        "description": "This script installs Duplicati 2.0.5.1 as a service.",
        "shell": "powershell"
    },
    {
        "filename": "Reset-WindowsUpdate.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Reset Windows Update",
        "description": "This script will reset all of the Windows Updates components to DEFAULT SETTINGS.",
        "shell": "powershell"
    },
    {
        "filename": "Start-Cleanup.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Cleanup C: drive",
        "description": "Cleans the C: drive's Window Temperary files, Windows SoftwareDistribution folder, the local users Temperary folder, IIS logs (if applicable) and empties the recycling bin. All deleted files will go into a log transcript in $env:TEMP. By default this script leaves files that are newer than 7 days old however this variable can be edited.",
        "shell": "powershell"
    },
    {
        "filename": "WindowsDefenderFullScanBackground.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Windows Defender Full Scan",
        "description": "Runs a Windows Defender Full background scan.",
        "shell": "powershell"
    },
    {
        "filename": "WindowsDefenderQuickScanBackground.ps1",
        "submittedBy": "https://github.com/Omnicef",
        "name": "Windows Defender Quick Scan",
        "description": "Runs a Quick Scan using Windows Defender in the Background.",
        "shell": "powershell"
    },
    {
        "filename": "speedtest.py",
        "submittedBy": "https://github.com/wh1te909",
        "name": "Speed Test",
        "description": "Runs a Speed Test",
        "shell": "python"
    },
    {
        "filename": "Rename-Installed-App.ps1",
        "submittedBy": "https://github.com/bradhawkins85",
        "name": "Rename Tactical RMM Agent",
        "description": "Updates the DisplayName registry entry for the Tactical RMM windows agent to your desired name. This script takes 1 required argument: the name you wish to set.",
        "shell": "powershell"
    },
    {
        "filename": "bitlocker_encrypted_drive_c.ps1",
        "submittedBy": "https://github.com/ThatsNASt",
        "name": "Check C Drive for Bitlocker Status",
        "description": "Runs a check on drive C for Bitlocker status.",
        "shell": "powershell"
    },
    {
        "filename": "bitlocker_create_status_report.ps1",
        "submittedBy": "https://github.com/ThatsNASt",
        "name": "Create Bitlocker Status Report",
        "description": "Creates a Bitlocker status report.",
        "shell": "powershell"
    },
    {
        "filename": "bitlocker_retrieve_status_report.ps1",
        "submittedBy": "https://github.com/ThatsNASt",
        "name": "Retreive Bitlocker Status Report",
        "description": "Retreives a Bitlocker status report.",
        "shell": "powershell"
    },
    {
        "filename": "bios_check.ps1",
        "submittedBy": "https://github.com/ThatsNASt",
        "name": "Check BIOS Information",
        "description": "Retreives and reports on BIOS make, version, and date   .",
        "shell": "powershell"
    },
    {
        "filename": "ResetHighPerformancePowerProfiletoDefaults.ps1",
        "submittedBy": "https://github.com/azulskyknight",
        "name": "Reset High Perf Power Profile",
        "description": "Resets monitor, disk, standby, and hibernate timers in the default High Performance power profile to their default values. It also re-indexes the AC and DC power profiles into their default order.",
        "shell": "powershell"
    },
    {
        "filename": "SetHighPerformancePowerProfile.ps1",
        "submittedBy": "https://github.com/azulskyknight",
        "name": "Set High Perf Power Profile",
        "description": "Sets the High Performance Power profile to the active power profile. Use this to keep machines from falling asleep.",
        "shell": "powershell"
    },
    {
        "filename": "Windows10Upgrade.ps1",
        "submittedBy": "https://github.com/RVL-Solutions and https://github.com/darimm",
        "name": "Windows 10 Upgrade",
        "description": "Forces an upgrade to the latest release of Windows 10.",
        "shell": "powershell"
    },
    {
        "filename": "DiskStatus.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Check Disks",
        "description": "Checks local disks for errors reported in event viewer within the last 24 hours",
        "shell": "powershell"
    },
    {
        "filename": "DuplicatiStatus.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Check Duplicati",
        "description": "Checks Duplicati Backup is running properly over the last 24 hours",
        "shell": "powershell"
    },
    {
        "filename": "EnableDefender.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Enable Windows Defender",
        "description": "Enables Windows Defender and sets preferences",
        "shell": "powershell"
    },
    {
        "filename": "OpenSSHServerInstall.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Install SSH",
        "description": "Installs and enabled OpenSSH Server",
        "shell": "powershell"
    },
    {
        "filename": "RDP_enable.bat",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Enable RDP",
        "description": "Enables RDP",
        "shell": "cmd"
    },
    {
        "filename": "Speedtest.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "PS Speed Test",
        "description": "Powershell speed test (win 10 or server2016+)",
        "shell": "powershell"
    },
    {
        "filename": "SyncTime.bat",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Sync DC Time",
        "description": "Syncs time with domain controller",
        "shell": "cmd"
    },
    {
        "filename": "WinDefenderClearLogs.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Clear Defender Logs",
        "description": "Clears Windows Defender Logs",
        "shell": "powershell"
    },
    {
        "filename": "WinDefenderStatus.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Defender Status",
        "description": "This will check for Malware, Antispyware, that Windows Defender is Healthy, last scan etc within the last 24 hours",
        "shell": "powershell"
    },
    {
        "filename": "disable_FastStartup.bat",
        "submittedBy": "https://github.com/dinger1986",
        "name": "Disable Fast Startup",
        "description": "Disables Faststartup on Windows 10",
        "shell": "cmd"
    },
    {
        "filename": "updatetacticalexclusion.ps1",
        "submittedBy": "https://github.com/dinger1986",
        "name": "TRMM Defender Exclusions",
        "description": "Windows Defender Exclusions for Tactical RMM",
        "shell": "powershell"
    }
]